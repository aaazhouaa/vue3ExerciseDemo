{
    "sourceFile": "index.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1685162304747,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1685162304747,
            "name": "Commit-0",
            "content": "// const express = require(\"express\")\r\n// const app = express()\r\n// const path = require(\"path\")\r\n// const fs = require(\"fs/promises\")\r\n// const jwt = require(\"jsonwebtoken\")\r\n\r\n// // 引入数据 (转换为绝对路径)\r\n// let USERS = require(path.resolve(__dirname, \"data/user.json\"))\r\n\r\n// // 引入请求体中间件\r\n// app.use(express.urlencoded())\r\n// // 解析JSON格式请求体的中间件\r\n// app.use(express.json())\r\n\r\n// app.use((req, res, next) => {\r\n//     // 设置响应头\r\n//     res.setHeader(\"Access-Control-Allow-Origin\", \"*\")\r\n//     res.setHeader(\r\n//         \"Access-Control-Allow-Methods\",\r\n//         \"GET,POST,PUT,PATH,DELETE,OPTIONS\"\r\n//     )\r\n//     res.setHeader(\"Access-Control-Allow-Headers\", \"Content-type,Authorization\")\r\n//     // 放行\r\n//     next()\r\n// })\r\n\r\n// // 访问路由前验证是否登录\r\n// app.use((req, res, next) => {\r\n//     try {\r\n//         if (req.path === \"/login\") {\r\n//             return next()\r\n//         } else {\r\n//             const token = req.get(\"Authorization\")\r\n//             if (!token) {\r\n\r\n//                 // token不存在 就重定向到登录路由\r\n//                 res.redirect(\"/login\")\r\n\r\n//             } else if (token) {\r\n\r\n//                 // 如果token存在 解密token\r\n//                 jwt.verify(token, \"jiami\", (err, decode) => {\r\n\r\n//                     if (err) {\r\n\r\n//                         // token无效 就重定向到登录路由\r\n//                         res.redirect(\"/login\")\r\n\r\n//                         // 向客户端发送错误信息\r\n//                         res.status(403).send({\r\n//                             status: \"error\",\r\n//                             message: \"token无效\"\r\n//                         })\r\n//                     } else {\r\n//                         console.log(decode, \"解密的数据\")\r\n//                         next()\r\n//                     }\r\n//                 })\r\n//             }\r\n//         }\r\n//     } catch (error) {\r\n//         res.status(500).send({ status: \"error\", message: \"服务器错误\" })\r\n//         console.log(error)\r\n//     }\r\n\r\n// })\r\n\r\n\r\n// app.post(\"/login\", (req, res, next) => {\r\n//     // 获取用户名和密码\r\n//     const { account, password } = req.body\r\n//     const user = USERS.find(item => item.account === account && item.password === password)\r\n//     if (user) {\r\n//         // 保质期 一天\r\n//         const token = jwt.sign({ id: user.id, name: user.name, img: user.img }, \"jiami000\", { expiresIn: \"1d\" })\r\n//         res.send({\r\n//             status: \"ok\", data: token\r\n//         })\r\n//     } else {\r\n//         res.send({\r\n//             status: \"error\", data: \"用户名或码错误\"\r\n//         })\r\n//     }\r\n\r\n\r\n// })\r\n\r\nconst express = require(\"express\")\r\nconst app = express()\r\nconst path = require(\"path\")\r\nconst userLogin = require(\"./router/login\")\r\nconst shop = require(\"./router/shop\")\r\n// const shopSideBar = require(\"./router/(已合并)shop_sideBar\")\r\n// const shopAll = require(\"./router/(已合并)shop_all\")\r\nconst homeIcons = require(\"./router/home_icons\")\r\n\r\n\r\n// 引入请求体中间件\r\n// app.use(express.urlencoded())\r\n// 解析JSON格式请求体的中间件\r\napp.use(express.json())\r\n\r\napp.use((req, res, next) => {\r\n    // 设置响应头\r\n    res.setHeader(\"Access-Control-Allow-Origin\", \"*\")\r\n    res.setHeader(\r\n        \"Access-Control-Allow-Methods\",\r\n        \"GET,POST,PUT,PATH,DELETE,OPTIONS\"\r\n    )\r\n    res.setHeader(\"Access-Control-Allow-Headers\", \"Content-type,Authorization\")\r\n    // 放行\r\n    next()\r\n})\r\n\r\n// 首页分类\r\napp.use(homeIcons)\r\n\r\n// 店铺\r\napp.use(shop)\r\n\r\n// // 店铺侧边菜单栏\r\n// app.use(shopSideBar)\r\n\r\n// // 店铺全部商品\r\n// app.use(shopAll)\r\n\r\n\r\n// 使用login路由\r\napp.use(userLogin)\r\n\r\n\r\napp.listen(3000, () => {\r\n    console.log(\"服务器启动成功\")\r\n})"
        }
    ]
}